/*
 * This file was generated by the Gradle 'init' task.
 */

plugins {
    id 'java-library'
    id 'org.springframework.boot' version '2.3.4.RELEASE'
    id 'io.spring.dependency-management' version '1.0.11.RELEASE'
    id 'maven-publish'
    id "org.sonarqube" version "5.0.0.4638"
}

repositories {
    mavenLocal()
    maven {
        url = uri('https://repo.maven.apache.org/maven2/')
    }
}

dependencies {
    api libs.com.azure.spring.spring.cloud.azure.starter.storage
    api libs.org.springframework.boot.spring.boot.starter.data.jdbc
    api libs.org.springframework.boot.spring.boot.starter.data.jpa
    api libs.org.springframework.boot.spring.boot.starter.oauth2.resource.server
    api libs.org.springframework.boot.spring.boot.starter.security
    api libs.org.springframework.boot.spring.boot.starter.web
    api libs.com.okta.jwt.okta.jwt.verifier
    api libs.org.projectlombok.lombok
    api libs.com.auth0.java.jwt
    api libs.org.springframework.boot.spring.boot.starter.websocket
    runtimeOnly libs.com.okta.jwt.okta.jwt.verifier.impl
    runtimeOnly libs.org.postgresql.postgresql
    testImplementation libs.org.springframework.boot.spring.boot.starter.test
    testImplementation libs.org.springframework.security.spring.security.test
}

group = 'api'
version = '0.0.1-SNAPSHOT'
description = 'dieti2024'
java.sourceCompatibility = JavaVersion.VERSION_1_8

publishing {
    publications {
        maven(MavenPublication) {
            from(components.java)
        }
    }
}

tasks.withType(JavaCompile) {
    options.encoding = 'UTF-8'
}

tasks.withType(Javadoc) {
    options.encoding = 'UTF-8'
}

sonarqube {
    properties {
        property 'sonar.host.url', 'https://localhost:9000'
        property "sonar.login", "https://localhost:9000"
        property "sonar.password", ""
        property "sonar.projectKey", "pdieti24"
        property 'sonar.projectName', 'Ingegneria Springboot'
        property 'sonar.java.source', 17
        property 'sonar.junit.reportPaths', 'build/results'
        property 'encoding', 'UTF-8'
        property 'charSet', 'UTF-8'
        property "sonar.coverage.jacoco.xmlReportPaths", "path.xml"
    }
}